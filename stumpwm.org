#+TITLE: stumpwm configuration
#+AUTHOR: calx

(made :with lisp)

#+BEGIN_SRC common-lisp :tangle init.lisp
  (in-package :stumpwm-user)
#+END_SRC

* modules

#+BEGIN_SRC common-lisp :tangle init.lisp
  (load-module "battery-portable")
  (load-module "cpu")
  (load-module "mem")
  (load-module "stumptray")
#+END_SRC

* key setup

** root map

#+BEGIN_SRC common-lisp :tangle init.lisp
  (set-prefix-key (kbd "s-t"))

  (define-key *root-map* (kbd "r") "restart-hard")
#+END_SRC

** motion keys

#+BEGIN_SRC common-lisp :tangle init.lisp
  (define-key *top-map* (kbd "s-j") "fnext")
  (define-key *top-map* (kbd "s-k") "fprev")

  (define-key *top-map* (kbd "s-n") "pull-hidden-next")
  (define-key *top-map* (kbd "s-p") "pull-hidden-previous")

  (define-key *top-map* (kbd "s-]") "gnext")
  (define-key *top-map* (kbd "s-[") "gprev")
#+END_SRC

** program keys

#+BEGIN_SRC common-lisp :tangle init.lisp
  (define-key *top-map* (kbd "s-RET") "exec alacritty")

  (define-key *top-map* (kbd "s-z") "exec emacsclient -c -a 'emacs'")
  (define-key *top-map* (kbd "s-Z") "exec emacs")
#+END_SRC

** other keys

#+BEGIN_SRC common-lisp :tangle init.lisp
  (define-key *top-map* (kbd "s-d") "exec")
  (define-key *top-map* (kbd "s-c") "exec rofi -show drun")

  (define-key *top-map* (kbd "s-g") "abort")
#+END_SRC

** controller keys

#+BEGIN_SRC common-lisp :tangle init.lisp
  ;; brightness control
  (define-key *top-map* (kbd "XF86MonBrightnessUp") "exec brightnessctl set +10%")
  (define-key *top-map* (kbd "XF86MonBrightnessDown") "exec brightnessctl set 10%-")
  (define-key *top-map* (kbd "S-XF86MonBrightnessUp") "exec brightnessctl set +2%")
  (define-key *top-map* (kbd "S-XF86MonBrightnessDown") "exec brightnessctl set 2%-")

  ;; volume control
  (define-key *top-map* (kbd "XF86AudioMute") "exec pactl set-sink-mute @DEFAULT_SINK@ toggle")
  (define-key *top-map* (kbd "C-XF86AudioMute") "exec pactl set-sink-mute @DEFAULT_SINK@ yes")
  (define-key *top-map* (kbd "XF86AudioRaiseVolume") "exec pactl set-sink-volume @DEFAULT_SINK@ +10%")
  (define-key *top-map* (kbd "XF86AudioLowerVolume") "exec pactl set-sink-volume @DEFAULT_SINK@ -10%")
  (define-key *top-map* (kbd "S-XF86AudioRaiseVolume") "exec pactl set-sink-volume @DEFAULT_SINK@ +2%")
  (define-key *top-map* (kbd "S-XF86AudioLowerVolume") "exec pactl set-sink-volume @DEFAULT_SINK@ -2%")

  ;; player control
  (define-key *top-map* (kbd "XF86AudioPlay") "exec playerctl play-pause")
  (define-key *top-map* (kbd "XF86AudioPrev") "exec playerctl prev")
  (define-key *top-map* (kbd "XF86AudioNext") "exec playerctl next")

  ;; screenshot
  (define-key *top-map* (kbd "SunPrint_Screen") "exec scrot -f ~/captures/%Y-%m-%d_%H:%M:%S.png")
  (define-key *top-map* (kbd "C-SunPrint_Screen") "exec scrot -u -f ~/captures/\\$W.%Y-%m-%d_%H:%M:%S.png")
  (define-key *top-map* (kbd "M-SunPrint_Screen") "exec scrot -s -f ~/captures/%Y-%m-%d_%H:%M:%S.png")
#+END_SRC

* group setup

#+BEGIN_SRC common-lisp :tangle init.lisp
  (grename "home")
#+END_SRC

* mode-line setup

#+BEGIN_SRC common-lisp :tangle init.lisp
  (setf *time-format-string* "%a %b %e %Y %k:%M:%S")
  (setf *screen-mode-line-format*
	(list "[%n]"
	      "%v"
	      "^>"
	      " | %C"
	      " | %M"
	      " | %B"
	      " | %d"
	      " |  "))
  (setf *mode-line-timeout* 1)
  (setf *mode-line-position* :bottom)
  (setf *mode-line-background-color* "#000000")
  (setf *mode-line-foreground-color* "#FFFFFF")

  (mode-line)
#+END_SRC

** stumptray setup

#+BEGIN_SRC common-lisp :tangle init.lisp
  (setf stumptray::*tray-viwin-background* *mode-line-background-color*)

  (stumptray::stumptray)
#+END_SRC

* other setup

#+BEGIN_SRC common-lisp :tangle init.lisp
  (setf *mouse-focus-policy* :sloppy)

  (setf *message-window-gravity* :center
	*message-window-input-gravity* :center
	*input-window-gravity* :center)
#+END_SRC

* spawn once

#+BEGIN_SRC common-lisp :tangle init.lisp
  (loop for cmd in (list "~/.fehbg"
			 "xsetroot -cursor_name left_ptr"
			 "picom"
			 "nm-applet"
			 "dunst")
	do (run-shell-command cmd))
#+END_SRC
